<%
begin
    err = []
    name = params['name'].to_s
    path = params['path'].to_s
    publ = params['public'].nil? ? false : params['public'].to_s == 'on'
    desc = params['description'].to_s
    type = params['type'].to_s

    # validate: the name is not empty
    err << "Name is required." if name.empty?

    # valdiate: the path is not empty
    err << "Path is required." if path.empty?

    # validate: the path is not already taken
    err << "Path is already taken." if !BlackStack::Content::Seminar.available?(path, @login.user.account)

    # validate: the name doesn't contain invalid characters
    err << "Name contains invalid characters." if !BlackStack::Content::Seminar.valid_name?(name)

    # validate: the path doesn't contain invalid characters
    err << "Path contains invalid characters." if !BlackStack::Content::Seminar.valid_path?(path)

    # validate: there is not other seminar with the same name and path
    err << "There is already a seminar with the same name and path." if !DB["SELECT id FROM cnt_seminar WHERE path='#{path.to_s.to_sql}' and name='#{name.to_s.to_sql}' and id<>'#{params['sid'].to_guid}'"].first.nil?

    # if any error happened, return to the edition screen
    raise err.join("\n") if err.size > 0

    o = BlackStack::Content::Seminar.where(:id=>params['sid'].to_guid).first
    o.name = name.downcase
    o.path = path.downcase
    o.description = desc
    o.public = publ
    o.type = type
    o.save

    # return
    redirect "/content/seminars/#{params['sid'].to_guid}/view?msg="+ CGI::escape('Seminar edited.')
rescue => e
    # return errors
    redirect "/content/seminars/#{params['sid'].to_guid}/edit?err="+ CGI::escape(e.message)
end
%>